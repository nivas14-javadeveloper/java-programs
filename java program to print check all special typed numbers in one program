import java.util.Scanner;
class A 
{
    public static void main(String[]args)
    {
        Scanner s=new Scanner(System.in);
        Num e=new Num();
        Num e1=new Num();
        Num e2=new Num();
        Num e3=new Num();
        Num e4=new Num();
        System.out.println("enter a number for factorial,prime,perfect,strong,armstrong,automorphic,spy,neon :");
        e.n=s.nextInt();
        System.out.println("enter value of n for swap,lcm,hcf:");
        e1.n=s.nextInt();
        System.out.println("enter value of m for swap,lcm,hcf:");
        e1.m=s.nextInt();
        System.out.println("enter value for reverse:");
        e2.n=s.nextInt();
        System.out.println("enter value for bintodecimal and octaltodecimal :");
        e3.n=s.nextInt();
        System.out.println("enter value for decitobinary and decitooctal");
        e4.n=s.nextInt();
        System.out.println("|------------------------------------------------|");
        e1.sum();
        System.out.println("|------------------------------------------------|");
        e2.len();
        System.out.println("|------------------------------------------------|");
        e2.reverse();
        System.out.println("|------------------------------------------------|");
        e2.palindrome();
        System.out.println("|------------------------------------------------|");
        e3.binToDeci();
        System.out.println("|------------------------------------------------|");
        e3.OctalToDeci();
        System.out.println("|------------------------------------------------|");
        e4.deciToBinary();
        System.out.println("|------------------------------------------------|");
        e4.deciToOctal();
        System.out.println("|------------------------------------------------|");
        e.isEvenOrOdd();
        System.out.println("|------------------------------------------------|");
        e1.swap();
        System.out.println("|------------------------------------------------|");
        e1.lcm();
        System.out.println("|------------------------------------------------|");
        e1.hcfOrGcd();
        System.out.println("|------------------------------------------------|");
        e.factorial();
        System.out.println("|------------------------------------------------|");
        e.isPrimeNumber();
        System.out.println("|------------------------------------------------|");
        e.isPerfect();
        System.out.println("|------------------------------------------------|");
        e.isStrong();
        System.out.println("|------------------------------------------------|");
        e.isAutomorphic();
        System.out.println("|------------------------------------------------|");
        e.isArmstrong();
        System.out.println("|------------------------------------------------|"); 
        e.spyNumber();
        System.out.println("|------------------------------------------------|");
        e.neonNumber();
        System.out.println("|------------------------------------------------|");
    }
}
class Num
{
    int n;
    int m;
    void sum()
    {
        int res=n+m;
        System.out.println("the sum of two numbers n="+n+",m="+m+" "+"is"+res);
    }
    void len()
    {
        int count=0;
        int num=n;
        while(num>0)
        {
            count++;
            num/=10;
        }
        System.out.println("the length of a number n="+n+" "+"is"+" "+count);
    }
    void reverse()
    {
        int num=n;
        int i=10;
        int res=0;
        while(num>0)
        {
            int rem=num%10;
            res=(res*i)+rem;
            num/=10;
        }
        System.out.println("the reverse of a number n="+n+" "+"is"+" "+res);
    }
    void palindrome()
    {
        int number=n;
        int i=10;
        int res=0;
        while(number>0)
        {
            int rem=number%10;
            res=(res*i)+rem;
            number/=10;
        }
        if(res==n)
        {
        System.out.println("the number n="+n+" "+"is a palindrome");
        }
        else
        {
        System.out.println("the number n="+n+" "+"is not a palindrome");    
        }
    }
    void binToDeci()
    {
        int num=n;
        int res=0;
        int i=1;
        while(num>0)
        {
            int rem=num%10;
            res=res+(rem*i);
            i*=2;
            num/=10;
        }
        System.out.println("the decimal of binary number n="+n+" "+"is"+" "+res);
    }
    void OctalToDeci()
    {
        int number=n;
        int res=0;
        int i=1;
        while(number>0)
        {
            int rem=number%10;
            res=res+(rem*i);
            i*=8;
            number/=10;
        }
        System.out.println("the decimal of octal number n="+n+" "+"is"+" "+res);
    }
    void deciToBinary()
    {
        int num=n;
        int res=0;
        int i=1;
        while(num>0)
        {
            int rem=num%2;
            res=res+(rem*i);
            i*=10;
            num/=2;
        }
        System.out.println("the binary of decimal number n="+n+" "+"is"+" "+res);
    }
    void deciToOctal()
    {
        int j=1;
        int number=n;
        int res=0;
        while(number>0)
        {
            int rem=number%8;
            res=res+(rem*j);
            j*=10;
            number/=8;
        }
        System.out.println("the octal of decimal number n="+n+" "+"is"+" "+res);
    }
    void isEvenOrOdd()
    {
    if(n%2==0)
    {
        System.out.println(n+" "+"is even number");
    }
    else
    {
        System.out.println(n+" "+"is odd number");
    }
    }
    void swap()
    {
        int res=0;
        res=m;
        m=n;
        n=res;
        System.out.println("after swapping n="+n+",m="+m);
    }
    void lcm()
    {
        int high=n>m?n:m;
        while(true)
        {
        if(high%n==0 && high%m==0)
        {
            System.out.println("the LCM of two numbers n="+n+",m="+m+" "+"is"+" "+high);
            break;
        }
        high++;
        }
    }
    void hcfOrGcd()
    {
        int low=n<m?n:m;
        while(true)
        {
        if(n%low==0 && m%low==0)
        {
            System.out.println("the HCForGCD of two numbers n="+n+",m="+m+" "+"is"+" "+low);
            break;
        }
        low--;
        }
    }
    void factorial()
    {
        int fact=1;
        for(int i=1;i<=n;i++)
        {
            fact*=i;
        }
        System.out.println("the factorial of number"+" "+n+" "+"is"+" "+fact);
    }
    void isPrimeNumber()
    {
        if(n==1)
        {
            System.out.println(n+" "+"is either prime number or composite number");
        }
        else if(n<=0)
        {
            System.out.println(n+" "+"is not a prime number");
        }
        else
        {
             boolean pri=true;
          for(int i=2;i<n/2;i++)
           {
              if(n%i==0)
              {
                pri=false;
                break;
              }
           }
              if(pri)
              {
                  System.out.println(n+" "+"is a prime number");  
              }
              else
              {
                  System.out.println(n+" "+"is not a prime number");  
              }
        }
    }
    void isPerfect()
    {
        int sum=0;
        for(int i=1;i<=n/2;i++)
        {
            if(n%i==0)
            {
                sum=sum+i;
            }
        }
        if(sum==n)
        {
            System.out.println(n+" "+"is a perfect number");
        }
        else
        {
           System.out.println(n+" "+"is not a perfect number");
        }
    }
    void isStrong()
    {
        int number=n;
        int sum=0;
        while(number>0)
        {
            int fact=1;
            int rem=number%10;
            for(int i=1;i<=rem;i++)
            {
                fact*=i;
            }
            sum=sum+fact;
            number/=10;
        }
        if(sum==n)
        {
        System.out.println(n+" "+"is a strong number");
        }
        else
        {
        System.out.println(n+" "+"is not a strong number");
        }
    }
    void isAutomorphic()
    {
        int number=n;
        int i=1;
        while(number>0)
        {
            int rem=number%10;
            i*=10;
            number/=10;
        }
        int sq=n*n;
        if(sq%i==n%i)
        {
        System.out.println(n+" "+"is an automorphic number");
        }
        else 
        {
        System.out.println(n+" "+"is not an automorphic number");
        }
    }
    void isArmstrong()
    {
        int count=0;
        int number=n;
        while(number>0)
        {
            count++;
            number/=10;
        }
        number=n;
        int sum=0;
        while(number>0)
        {
            int rem=number%10;
            sum=sum+(int)Math.pow(rem,count);
            number/=10;
        }
        if(sum==n)
        {
        System.out.println(n+" "+"is an armstrong number");
        }
        else
        {
        System.out.println(n+" "+"is not an armstrong number");
        }
    }
    void spyNumber()
    {
        int sum=0;
        int num=n;
        int mul=1;
            while(num>0)
            {
                int rem=num%10;
                    sum=sum+rem;
                    mul=mul*rem;
                    num/=10;
            }
            if(sum==mul)
            {
                System.out.println(n+" "+"is a spy number");
            }
            else
            {
                System.out.println(n+" "+"is not a spy number");
            }
    }
    void neonNumber()
    {
        int num1=n;
        int sum=0;
        int sq=num1*num1;
        while(sq>0)
        {
            int rem=sq%10;
            sum=sum+rem;
            sq/=10;
        }
        if(sum==n)
        {
            System.out.println(n+" "+" is a neon number");
        }
        else 
        {
            System.out.println(n+" "+" is not a neon number");
        }
    }
}
